package main

import (
	"fmt"
	"log"
	"sync"

	"github.com/devstackq/gen_sh/internal/database"
	"github.com/devstackq/gen_sh/internal/upload"
	"github.com/devstackq/gen_sh/internal/video/service"
	"github.com/devstackq/gen_sh/pkg/logger"
)

func main() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
	logger.InitLogger()
	defer logger.Log.Sync()

	// –ü—É—Ç—å –∫ credentials –¥–ª—è YouTube
	credentialsFile := "credentials.json"

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ YouTube
	ytUploader, err := upload.NewYouTubeUploader(credentialsFile)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ YouTube uploader: %v", err)
	}
	//todo future upload tikTok

	// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	dbConn, err := database.ConnectDB()
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:", err)
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –≤–∏–¥–µ–æ
	videoService := service.NewVideoService(dbConn)

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
	videos, err := videoService.GetUnuploadedVideos()
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ –ë–î:", err)
	}

	// –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ YouTube
	fmt.Println("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –≤–∏–¥–µ–æ...")

	var wg sync.WaitGroup
	for _, videoRecord := range videos {
		wg.Add(1)
		go func(videoRecord service.Video) {
			defer wg.Done()

			// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ YouTube
			err := ytUploader.Upload(videoRecord.Path)
			if err != nil {
				log.Printf("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ %s: %v", videoRecord.Path, err)
				return
			}

			// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			err = videoService.MarkVideoAsUploaded(videoRecord.ID)
			if err != nil {
				log.Printf("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ –≤ –ë–î: %v", err)
			} else {
				log.Printf("–í–∏–¥–µ–æ %s —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ YouTube", videoRecord.Path)
			}
		}(videoRecord)
	}

	// –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –≥–æ—Ä—É—Ç–∏–Ω
	wg.Wait()

	fmt.Println("‚úÖ –í—Å–µ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
}
